name: Java Maven Build

on:
  push:
    branches: 
      - '**'
    paths-ignore:
      - '**/README.md'
  pull_request:
    branches:
      - '**'
    paths-ignore:
      - '**/README.md'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout source
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'zulu'
        cache: maven

    - name: Show versions
      run: java -version && ./mvnw -version && gpg --version

    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Import GPG key
      uses: crazy-max/ghaction-import-gpg@v4
      with:
        gpg_private_key: ${{ secrets.OSS_SONATYPE_GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.OSS_SONATYPE_GPG_PASSPHRASE }}

    - name: Build with Maven
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OSS_SONATYPE_USERNAME: michael-schnell
        OSS_SONATYPE_TOKEN: ${{ secrets.OSS_SONATYPE_TOKEN }}
        OSS_SONATYPE_GPG_PASSPHRASE: ${{ secrets.OSS_SONATYPE_GPG_PASSPHRASE }}
      run: ./mvnw clean deploy -U -B -P sonatype-oss-release --file pom.xml -s settings.xml
      
    - name: Project properties as ENV variables
      run: |
        cat ${{ github.workspace }}/target/classes/project.properties | grep "^[^#;]" >> $GITHUB_ENV

    - name: Tag on build
      uses: actions/github-script@v3
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}          
        script: |
          try {
              await github.git.deleteRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: "tags/${{ env.maven_version }}"
              })
          } catch (e) {
            console.log("The ${{ env.maven_version }} tag doesn't exist yet: " + e)
          }
          await github.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: "refs/tags/${{ env.maven_version }}",
            sha: context.sha
          })
